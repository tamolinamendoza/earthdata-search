detect_app_approval() {
    approved=`curl -s -b "$cookiejar" -c "$cookiejar" -L --max-redirs 2 -n <%= raw @urls.first %> -w %{http_code} | tail  -1`
    if [ "$approved" -ne "302" ]; then
        # User didn't approve the app. Direct users to approve the app in URS
        exit_bad_login "Please ensure that you have authorized the remote application by visiting the link below "
    fi
}

setup_auth_curl() {
    # Firstly, check if it require URS authentication
    status=$(curl -s -z "$(date)" -w %{http_code} <%= raw @urls.first %> | tail -1)
    if [[ "$status" -ne "200" && "$status" -ne "304" ]]; then
        <% # Check if this is an FTP retrieval %>
        <% if @urls.first.start_with? 'ftp' %>
        <% # FTP retrieval. Extract hostname and set netrc %>
        # FTP retrieval. Set netrc file before curl-ing.
        echo "\nmachine <%= @urls.first[/ftp:\/\/([^\/]*)\/.*/, 1] %>\tlogin $username\tpassword $password" >> $netrc
        <% else %>
        # URS authentication is required. Now further check if the application/remote service is approved.
        detect_app_approval
        <% end %>
    fi
}

setup_auth_wget() {
    # The safest way to auth via curl is netrc. Note: there's no checking or feedback
    # if login is unsuccessful
    touch ~/.netrc
    chmod 0600 ~/.netrc
    <% if @urls.first.start_with? 'ftp' %>
    ftp_hostname='<%= @urls.first[/ftp:\/\/([^\/]*)\/.*/, 1] %>'
    credentials=$(grep $ftp_hostname ~/.netrc)
    if [ -z "$credentials" ]; then
        echo "\nmachine <%= @urls.first[/ftp:\/\/([^\/]*)\/.*/, 1] %>\tlogin $username\tpassword $password" >> ~/.netrc
    fi
    <% end %>
    credentials=$(grep 'machine urs.earthdata.nasa.gov' ~/.netrc)
    if [ -z "$credentials" ]; then
        cat "$netrc" >> ~/.netrc
    fi
}
